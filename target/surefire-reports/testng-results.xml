<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="4" passed="3" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-12-04T20:20:47 PKT" name="Suite" finished-at="2023-12-04T20:21:36 PKT" duration-ms="49674">
    <groups>
    </groups>
    <test started-at="2023-12-04T20:20:47 PKT" name="Test" finished-at="2023-12-04T20:21:36 PKT" duration-ms="49674">
      <class name="com.parallel.universe.tests.SauceDemoWebTest">
        <test-method is-config="true" signature="setupExtentReport()[pri:0, instance:com.parallel.universe.tests.SauceDemoWebTest@2b71e916]" started-at="2023-12-04T20:20:47 PKT" name="setupExtentReport" finished-at="2023-12-04T20:20:47 PKT" duration-ms="365" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupExtentReport -->
        <test-method is-config="true" signature="setupBrowser()[pri:0, instance:com.parallel.universe.tests.SauceDemoWebTest@2b71e916]" started-at="2023-12-04T20:20:47 PKT" name="setupBrowser" finished-at="2023-12-04T20:20:53 PKT" duration-ms="6074" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupBrowser -->
        <test-method signature="loginTest()[pri:0, instance:com.parallel.universe.tests.SauceDemoWebTest@2b71e916]" started-at="2023-12-04T20:20:53 PKT" name="loginTest" finished-at="2023-12-04T20:21:13 PKT" duration-ms="19834" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.parallel.universe.tests.SauceDemoWebTest@2b71e916]" started-at="2023-12-04T20:21:13 PKT" name="getResult" finished-at="2023-12-04T20:21:13 PKT" duration-ms="307" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=loginTest status=SUCCESS method=SauceDemoWebTest.loginTest()[pri:0, instance:com.parallel.universe.tests.SauceDemoWebTest@2b71e916] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="setupBrowser()[pri:0, instance:com.parallel.universe.tests.SauceDemoWebTest@2b71e916]" started-at="2023-12-04T20:21:13 PKT" name="setupBrowser" finished-at="2023-12-04T20:21:17 PKT" duration-ms="3470" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupBrowser -->
        <test-method signature="loginTestFailed()[pri:0, instance:com.parallel.universe.tests.SauceDemoWebTest@2b71e916]" started-at="2023-12-04T20:21:17 PKT" name="loginTestFailed" finished-at="2023-12-04T20:21:18 PKT" duration-ms="682" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Swag Lab] but found [Swag Labs]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Swag Lab] but found [Swag Labs]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertEqualsImpl(Assert.java:150)
at org.testng.Assert.assertEquals(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:656)
at org.testng.Assert.assertEquals(Assert.java:666)
at com.parallel.universe.tests.SauceDemoWebTest.loginTestFailed(SauceDemoWebTest.java:64)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginTestFailed -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.parallel.universe.tests.SauceDemoWebTest@2b71e916]" started-at="2023-12-04T20:21:18 PKT" name="getResult" finished-at="2023-12-04T20:21:18 PKT" duration-ms="320" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=loginTestFailed status=FAILURE method=SauceDemoWebTest.loginTestFailed()[pri:0, instance:com.parallel.universe.tests.SauceDemoWebTest@2b71e916] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="setupBrowser()[pri:0, instance:com.parallel.universe.tests.SauceDemoWebTest@2b71e916]" started-at="2023-12-04T20:21:18 PKT" name="setupBrowser" finished-at="2023-12-04T20:21:21 PKT" duration-ms="3281" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupBrowser -->
        <test-method signature="productSelect()[pri:0, instance:com.parallel.universe.tests.SauceDemoWebTest@2b71e916]" started-at="2023-12-04T20:21:21 PKT" name="productSelect" finished-at="2023-12-04T20:21:35 PKT" duration-ms="13955" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- productSelect -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.parallel.universe.tests.SauceDemoWebTest@2b71e916]" started-at="2023-12-04T20:21:35 PKT" name="getResult" finished-at="2023-12-04T20:21:36 PKT" duration-ms="639" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=productSelect status=SUCCESS method=SauceDemoWebTest.productSelect()[pri:0, instance:com.parallel.universe.tests.SauceDemoWebTest@2b71e916] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="endReport()[pri:0, instance:com.parallel.universe.tests.SauceDemoWebTest@2b71e916]" started-at="2023-12-04T20:21:36 PKT" name="endReport" finished-at="2023-12-04T20:21:36 PKT" duration-ms="673" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endReport -->
      </class> <!-- com.parallel.universe.tests.SauceDemoWebTest -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
  <suite started-at="2023-12-04T20:21:36 PKT" name="Suite (0)" finished-at="2023-12-04T20:21:55 PKT" duration-ms="18787">
    <groups>
    </groups>
    <test started-at="2023-12-04T20:21:36 PKT" name="Test" finished-at="2023-12-04T20:21:55 PKT" duration-ms="18787">
      <class name="com.parallel.universe.tests.AppiumTestScenarios">
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.parallel.universe.tests.AppiumTestScenarios@65d09a04]" started-at="2023-12-04T20:21:36 PKT" name="beforeMethod" finished-at="2023-12-04T20:21:37 PKT" duration-ms="59" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="PreferenceTest()[pri:0, instance:com.parallel.universe.tests.AppiumTestScenarios@65d09a04]" started-at="2023-12-04T20:21:37 PKT" name="PreferenceTest" finished-at="2023-12-04T20:21:54 PKT" duration-ms="17443" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreferenceTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.parallel.universe.tests.AppiumTestScenarios@65d09a04]" started-at="2023-12-04T20:21:54 PKT" name="afterMethod" finished-at="2023-12-04T20:21:55 PKT" duration-ms="1281" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- com.parallel.universe.tests.AppiumTestScenarios -->
    </test> <!-- Test -->
  </suite> <!-- Suite (0) -->
</testng-results>
