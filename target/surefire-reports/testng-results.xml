<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="4" passed="3" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-12-04T00:56:28 PKT" name="Suite" finished-at="2023-12-04T00:57:03 PKT" duration-ms="35075">
    <groups>
    </groups>
    <test started-at="2023-12-04T00:56:28 PKT" name="Test" finished-at="2023-12-04T00:57:03 PKT" duration-ms="35075">
      <class name="com.parallel.universe.tests.SauceDemoWebTest">
        <test-method is-config="true" signature="setupExtentReport()[pri:0, instance:com.parallel.universe.tests.SauceDemoWebTest@397fbdb]" started-at="2023-12-04T00:56:28 PKT" name="setupExtentReport" finished-at="2023-12-04T00:56:28 PKT" duration-ms="327" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupExtentReport -->
        <test-method is-config="true" signature="setupBrowser()[pri:0, instance:com.parallel.universe.tests.SauceDemoWebTest@397fbdb]" started-at="2023-12-04T00:56:28 PKT" name="setupBrowser" finished-at="2023-12-04T00:56:40 PKT" duration-ms="11882" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupBrowser -->
        <test-method signature="loginTest()[pri:0, instance:com.parallel.universe.tests.SauceDemoWebTest@397fbdb]" started-at="2023-12-04T00:56:40 PKT" name="loginTest" finished-at="2023-12-04T00:56:43 PKT" duration-ms="2951" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginTest -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.parallel.universe.tests.SauceDemoWebTest@397fbdb]" started-at="2023-12-04T00:56:43 PKT" name="getResult" finished-at="2023-12-04T00:56:44 PKT" duration-ms="489" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=loginTest status=SUCCESS method=SauceDemoWebTest.loginTest()[pri:0, instance:com.parallel.universe.tests.SauceDemoWebTest@397fbdb] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="setupBrowser()[pri:0, instance:com.parallel.universe.tests.SauceDemoWebTest@397fbdb]" started-at="2023-12-04T00:56:44 PKT" name="setupBrowser" finished-at="2023-12-04T00:56:46 PKT" duration-ms="2245" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupBrowser -->
        <test-method signature="loginTestFailed()[pri:0, instance:com.parallel.universe.tests.SauceDemoWebTest@397fbdb]" started-at="2023-12-04T00:56:46 PKT" name="loginTestFailed" finished-at="2023-12-04T00:56:47 PKT" duration-ms="659" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Swag Lab] but found [Swag Labs]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Swag Lab] but found [Swag Labs]
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1577)
at org.testng.Assert.assertEqualsImpl(Assert.java:149)
at org.testng.Assert.assertEquals(Assert.java:131)
at org.testng.Assert.assertEquals(Assert.java:655)
at org.testng.Assert.assertEquals(Assert.java:665)
at com.parallel.universe.tests.SauceDemoWebTest.loginTestFailed(SauceDemoWebTest.java:64)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginTestFailed -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.parallel.universe.tests.SauceDemoWebTest@397fbdb]" started-at="2023-12-04T00:56:47 PKT" name="getResult" finished-at="2023-12-04T00:56:47 PKT" duration-ms="372" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=loginTestFailed status=FAILURE method=SauceDemoWebTest.loginTestFailed()[pri:0, instance:com.parallel.universe.tests.SauceDemoWebTest@397fbdb] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="setupBrowser()[pri:0, instance:com.parallel.universe.tests.SauceDemoWebTest@397fbdb]" started-at="2023-12-04T00:56:47 PKT" name="setupBrowser" finished-at="2023-12-04T00:56:49 PKT" duration-ms="2370" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupBrowser -->
        <test-method signature="productSelect()[pri:0, instance:com.parallel.universe.tests.SauceDemoWebTest@397fbdb]" started-at="2023-12-04T00:56:49 PKT" name="productSelect" finished-at="2023-12-04T00:57:02 PKT" duration-ms="12497" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- productSelect -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.parallel.universe.tests.SauceDemoWebTest@397fbdb]" started-at="2023-12-04T00:57:02 PKT" name="getResult" finished-at="2023-12-04T00:57:02 PKT" duration-ms="504" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=productSelect status=SUCCESS method=SauceDemoWebTest.productSelect()[pri:0, instance:com.parallel.universe.tests.SauceDemoWebTest@397fbdb] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="endReport()[pri:0, instance:com.parallel.universe.tests.SauceDemoWebTest@397fbdb]" started-at="2023-12-04T00:57:02 PKT" name="endReport" finished-at="2023-12-04T00:57:03 PKT" duration-ms="719" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endReport -->
      </class> <!-- com.parallel.universe.tests.SauceDemoWebTest -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
  <suite started-at="2023-12-04T00:57:03 PKT" name="Suite (0)" finished-at="2023-12-04T00:57:49 PKT" duration-ms="45830">
    <groups>
    </groups>
    <test started-at="2023-12-04T00:57:03 PKT" name="Test" finished-at="2023-12-04T00:57:49 PKT" duration-ms="45830">
      <class name="com.parallel.universe.tests.AppiumTestScenarios">
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.parallel.universe.tests.AppiumTestScenarios@609cd4d8]" started-at="2023-12-04T00:57:03 PKT" name="beforeMethod" finished-at="2023-12-04T00:57:20 PKT" duration-ms="16348" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="PreferenceTest()[pri:0, instance:com.parallel.universe.tests.AppiumTestScenarios@609cd4d8]" started-at="2023-12-04T00:57:20 PKT" name="PreferenceTest" finished-at="2023-12-04T00:57:48 PKT" duration-ms="28263" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PreferenceTest -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.parallel.universe.tests.AppiumTestScenarios@609cd4d8]" started-at="2023-12-04T00:57:48 PKT" name="afterMethod" finished-at="2023-12-04T00:57:49 PKT" duration-ms="1212" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- com.parallel.universe.tests.AppiumTestScenarios -->
    </test> <!-- Test -->
  </suite> <!-- Suite (0) -->
</testng-results>
